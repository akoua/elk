version: '3.5'

# To Join any other app setup using another network, change name and set external = true
networks:
  default:
    name: elastic
    external: false

# will contain all elasticsearch data.
volumes:
  elasticsearch-data:

secrets:
  elasticsearch.keystore:
    file: ./secrets/keystore/elasticsearch/elasticsearch.keystore
  logstash.keystore:
    file: ./secrets/keystore/logstash/logstash.keystore
  kibana.keystore:
    file: ./secrets/keystore/kibana/kibana.keystore
  elasticsearch.cacert:
    file: ./secrets/certs/ca/ca.crt
  elasticsearch.certificate:
    file: ./secrets/certs/elasticsearch/elasticsearch.crt
  elasticsearch.key:
    file: ./secrets/certs/elasticsearch/elasticsearch.key
  logstash.certificate:
    file: ./secrets/certs/logstash/logstash.crt
  logstash.key:
    file: ./secrets/certs/logstash/logstash.key
  kibana.certificate:
    file: ./secrets/certs/kibana/kibana.crt
  kibana.key:
    file: ./secrets/certs/kibana/kibana.key

services:
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: ${ELK_VERSION}
    restart: unless-stopped
    environment:
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      ELASTIC_CLUSTER_NAME: ${ELASTIC_CLUSTER_NAME}
      ELASTIC_NODE_NAME: ${ELASTIC_NODE_NAME}
      ELASTIC_INIT_MASTER_NODE: ${ELASTIC_INIT_MASTER_NODE}
      ELASTIC_DISCOVERY_SEEDS: ${ELASTIC_DISCOVERY_SEEDS}
      ES_JAVA_OPTS: -Xmx${ELASTICSEARCH_HEAP} -Xms${ELASTICSEARCH_HEAP} -Des.enforce.bootstrap.checks=true
      bootstrap.memory_lock: "true"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./elasticsearch/config/log4j2.properties:/usr/share/elasticsearch/config/log4j2.properties
    secrets:
      - source: elasticsearch.keystore
        target: /usr/share/elasticsearch/config/elasticsearch.keystore
      - source: elasticsearch.cacert
        target: /usr/share/elasticsearch/data/certs/ca.crt
      - source: elasticsearch.certificate
        target: /usr/share/elasticsearch/data/certs/elasticsearch.crt
      - source: elasticsearch.key
        target: /usr/share/elasticsearch/data/certs/elasticsearch.key
    ports:
      - "9200:9200"
      - "9300:9300"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 200000
        hard: 200000

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    restart: unless-stopped
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
      - ./logstash/templates/:/usr/share/logstash/templates:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    environment:
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      #ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      ELASTICSEARCH_HOST_PORT: "${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}"
      LS_JAVA_OPTS: "-Xmx${LOGSTASH_HEAP} -Xms${LOGSTASH_HEAP}"
    secrets:
      - source: logstash.keystore
        target: /usr/share/logstash/config/logstash.keystore
      - source: logstash.certificate
        target: /certs/logstash.crt
      - source: logstash.key
        target: /certs/logstash.key
      - source: elasticsearch.cacert
        target: /certs/ca.crt
    ports:
      - "5514:5514"
      - "9600:9600"
      - "5044:5044"
  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    restart: unless-stopped
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    environment:
      #ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      #ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      ELASTICSEARCH_HOST_PORT: ${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}
    secrets:
      - source: kibana.keystore
        target: /usr/share/kibana/data/kibana.keystore
      - source: elasticsearch.cacert
        target: /usr/share/kibana/data/certs/certs/ca.crt
      - source: kibana.certificate
        target: /usr/share/kibana/data/certs/certs/kibana.crt
      - source: kibana.key
        target: /usr/share/kibana/data/certs/certs/kibana.key
    ports:
      - "5601:5601"
