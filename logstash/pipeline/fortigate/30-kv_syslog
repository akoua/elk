input {

    pipeline {
        address => "kv_syslog"
    }

}

filter {

    mutate  { 
        copy => {"message" => "[event][original]"} 
        add_field => ["[event][created]", "%{@timestamp}"] # event.created: when the event is created by logstash
    }
    
    grok {
        match => ["message", "%{SYSLOG5424PRI:syslog_index}%{GREEDYDATA:message}"]
        overwrite => ["message"]
        tag_on_failure => ["kv_syslog_grok_failure"]
#       add_field => ["[event][created]", "%{@timestamp}"] 
    }

    if "syslog_grok_failure" not in [tag_on_failure]{
        kv {
          source => "message"
          value_split => "="
          field_split => " "
        }

        if [event][module]=="fortigate" {
            # 6.2 
            if [tz] {
                mutate  {
                    replace => {"temp_time" => "%{date} %{time} %{tz}"}
                }
            } 
        
            # 6.0 and below
            else {
                mutate{
                replace => {"temp_time" => "%{date} %{time}"}
                }
            }

        }

        # fortigate 6.2.X    
        else if [tz]{
            mutate{
            replace => {"temp_time" => "%{date} %{time} %{tz}"}
            }
        } 


        # forti* without tz
        else {
            mutate{
            replace => {"temp_time" => "%{date} %{time}"}
            }
        }
        
        # Just for avoid errors in timestamp field
        if !([event][timezone]) {
            mutate { 
                add_field => {"[event][timezone]" => "America/Toronto" }
                add_field => {"[tags]" => "setting_default_timezone" }
            }
        }        

        date {
            match => ["temp_time", "yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm:ss Z", "ISO8601"]
            timezone => "%{[event][timezone]}"
            target => "@timestamp"
            tag_on_failure => ["_dateparsefailure_kv_syslog"]
            
        }
    
        mutate{remove_field => ["date","time","syslog_index","message","temp_time"]}

    }
    
}

output {
    
    pipeline{
        send_to => "fortigate_2_ecs"
    }
}
